/****************************************************************************
 *   Copyright (c) 2022 Zheng Lei (realthunder) <realthunder.dev@gmail.com> *
 *                                                                          *
 *   This file is part of the FreeCAD CAx development system.               *
 *                                                                          *
 *   This library is free software; you can redistribute it and/or          *
 *   modify it under the terms of the GNU Library General Public            *
 *   License as published by the Free Software Foundation; either           *
 *   version 2 of the License, or (at your option) any later version.       *
 *                                                                          *
 *   This library  is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
 *   GNU Library General Public License for more details.                   *
 *                                                                          *
 *   You should have received a copy of the GNU Library General Public      *
 *   License along with this library; see the file COPYING.LIB. If not,     *
 *   write to the Free Software Foundation, Inc., 59 Temple Place,          *
 *   Suite 330, Boston, MA  02111-1307, USA                                 *
 *                                                                          *
 ****************************************************************************/

#ifndef GUI_REPORTVIEW_PARAMS_H
#define GUI_REPORTVIEW_PARAMS_H

/*[[[cog
import ReportViewParams
ReportViewParams.declare()
]]]*/

// Auto generated code (Tools/params_utils.py:82)
#include <Base/Parameter.h>
#include <boost_signals2.hpp>

// Auto generated code (Tools/params_utils.py:90)
namespace Gui {
/** Convenient class to obtain ReportView related parameters

 * The parameters are under group "User parameter:BaseApp/Preferences/OutputWindow"
 *
 * This class is auto generated by Gui/ReportViewParams.py. Modify that file
 * instead of this one, if you want to add any parameter. You need
 * to install Cog Python package for code generation:
 * @code
 *     pip install cogapp
 * @endcode
 *
 * Once modified, you can regenerate the header and the source file,
 * @code
 *     python3 -m cogapp -r Gui/ReportViewParams.h Gui/ReportViewParams.cpp
 * @endcode
 *
 * You can add a new parameter by adding lines in Gui/ReportViewParams.py. Available
 * parameter types are 'Int, UInt, String, Bool, Float'. For example, to add
 * a new Int type parameter,
 * @code
 *     ParamInt(parameter_name, default_value, documentation, on_change=False)
 * @endcode
 *
 * If there is special handling on parameter change, pass in on_change=True.
 * And you need to provide a function implementation in Gui/ReportViewParams.cpp with
 * the following signature.
 * @code
 *     void ReportViewParams:on<parameter_name>Changed()
 * @endcode
 */
class GuiExport ReportViewParams {
public:
    static ParameterGrp::handle getHandle();

    static boost::signals2::signal<void (const char*)> &signalParamChanged();
    static void signalAll();

    // Auto generated code (Tools/params_utils.py:138)
    //@{
    /// Accessor for parameter checkShowReportViewOnWarning
    static const bool & getcheckShowReportViewOnWarning();
    static const bool & defaultcheckShowReportViewOnWarning();
    static void removecheckShowReportViewOnWarning();
    static void setcheckShowReportViewOnWarning(const bool &v);
    static const char *doccheckShowReportViewOnWarning();
    //@}

    // Auto generated code (Tools/params_utils.py:138)
    //@{
    /// Accessor for parameter checkShowReportViewOnError
    static const bool & getcheckShowReportViewOnError();
    static const bool & defaultcheckShowReportViewOnError();
    static void removecheckShowReportViewOnError();
    static void setcheckShowReportViewOnError(const bool &v);
    static const char *doccheckShowReportViewOnError();
    //@}

    // Auto generated code (Tools/params_utils.py:138)
    //@{
    /// Accessor for parameter checkShowReportViewOnNormalMessage
    static const bool & getcheckShowReportViewOnNormalMessage();
    static const bool & defaultcheckShowReportViewOnNormalMessage();
    static void removecheckShowReportViewOnNormalMessage();
    static void setcheckShowReportViewOnNormalMessage(const bool &v);
    static const char *doccheckShowReportViewOnNormalMessage();
    //@}

    // Auto generated code (Tools/params_utils.py:138)
    //@{
    /// Accessor for parameter checkShowReportViewOnLogMessage
    static const bool & getcheckShowReportViewOnLogMessage();
    static const bool & defaultcheckShowReportViewOnLogMessage();
    static void removecheckShowReportViewOnLogMessage();
    static void setcheckShowReportViewOnLogMessage(const bool &v);
    static const char *doccheckShowReportViewOnLogMessage();
    //@}

    // Auto generated code (Tools/params_utils.py:138)
    //@{
    /// Accessor for parameter checkShowReportViewOnCritical
    static const bool & getcheckShowReportViewOnCritical();
    static const bool & defaultcheckShowReportViewOnCritical();
    static void removecheckShowReportViewOnCritical();
    static void setcheckShowReportViewOnCritical(const bool &v);
    static const char *doccheckShowReportViewOnCritical();
    //@}

    // Auto generated code (Tools/params_utils.py:138)
    //@{
    /// Accessor for parameter checkShowReportTimecode
    static const bool & getcheckShowReportTimecode();
    static const bool & defaultcheckShowReportTimecode();
    static void removecheckShowReportTimecode();
    static void setcheckShowReportTimecode(const bool &v);
    static const char *doccheckShowReportTimecode();
    //@}

    // Auto generated code (Tools/params_utils.py:138)
    //@{
    /// Accessor for parameter LogMessageSize
    static const long & getLogMessageSize();
    static const long & defaultLogMessageSize();
    static void removeLogMessageSize();
    static void setLogMessageSize(const long &v);
    static const char *docLogMessageSize();
    //@}

    // Auto generated code (Tools/params_utils.py:138)
    //@{
    /// Accessor for parameter CommandRedirect
    ///
    /// Prefix for marking python command in message to be redirected to Python console
    /// This is used as a debug help for output command from external libraries
    static const QString & getCommandRedirect();
    static const QString & defaultCommandRedirect();
    static void removeCommandRedirect();
    static void setCommandRedirect(const QString &v);
    static const char *docCommandRedirect();
    //@}

// Auto generated code (Tools/params_utils.py:178)
}; // class ReportViewParams
} // namespace Gui
//[[[end]]]

#endif // GUI_REPORTVIEW_PARAMS_H
