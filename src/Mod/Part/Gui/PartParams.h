/****************************************************************************
 *   Copyright (c) 2022 Zheng Lei (realthunder) <realthunder.dev@gmail.com> *
 *                                                                          *
 *   This file is part of the FreeCAD CAx development system.               *
 *                                                                          *
 *   This library is free software; you can redistribute it and/or          *
 *   modify it under the terms of the GNU Library General Public            *
 *   License as published by the Free Software Foundation; either           *
 *   version 2 of the License, or (at your option) any later version.       *
 *                                                                          *
 *   This library  is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
 *   GNU Library General Public License for more details.                   *
 *                                                                          *
 *   You should have received a copy of the GNU Library General Public      *
 *   License along with this library; see the file COPYING.LIB. If not,     *
 *   write to the Free Software Foundation, Inc., 59 Temple Place,          *
 *   Suite 330, Boston, MA  02111-1307, USA                                 *
 *                                                                          *
 ****************************************************************************/

#ifndef PART_PARAMS_H
#define PART_PARAMS_H

#include <Mod/Part/PartGlobal.h>

/*[[[cog
import PartGuiParams
PartGuiParams.declare()
]]]*/

// Auto generated code (Tools/params_utils.py:72)
#include <Base/Parameter.h>


// Auto generated code (Tools/params_utils.py:78)
namespace PartGui {
/** Convenient class to obtain Part/PartDesign visual related parameters

 * The parameters are under group "User parameter:BaseApp/Preferences/Mod/Part"
 *
 * This class is auto generated by Mod/Part/Gui/PartParams.py. Modify that file
 * instead of this one, if you want to add any parameter. You need
 * to install Cog Python package for code generation:
 * @code
 *     pip install cogapp
 * @endcode
 *
 * Once modified, you can regenerate the header and the source file,
 * @code
 *     python3 -m cogapp -r Mod/Part/Gui/PartParams.h Mod/Part/Gui/PartParams.cpp
 * @endcode
 *
 * You can add a new parameter by adding lines in Mod/Part/Gui/PartParams.py. Available
 * parameter types are 'Int, UInt, String, Bool, Float'. For example, to add
 * a new Int type parameter,
 * @code
 *     ParamInt(parameter_name, default_value, documentation, on_change=False)
 * @endcode
 *
 * If there is special handling on parameter change, pass in on_change=True.
 * And you need to provide a function implementation in Mod/Part/Gui/PartParams.cpp with
 * the following signature.
 * @code
 *     void PartParams:on<parameter_name>Changed()
 * @endcode
 */
class PartGuiExport PartParams {
public:
    static ParameterGrp::handle getHandle();

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter NormalsFromUVNodes
    static const bool & getNormalsFromUVNodes();
    static const bool & defaultNormalsFromUVNodes();
    static void removeNormalsFromUVNodes();
    static void setNormalsFromUVNodes(const bool &v);
    static const char *docNormalsFromUVNodes();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter TwoSideRendering
    static const bool & getTwoSideRendering();
    static const bool & defaultTwoSideRendering();
    static void removeTwoSideRendering();
    static void setTwoSideRendering(const bool &v);
    static const char *docTwoSideRendering();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter MinimumDeviation
    static const double & getMinimumDeviation();
    static const double & defaultMinimumDeviation();
    static void removeMinimumDeviation();
    static void setMinimumDeviation(const double &v);
    static const char *docMinimumDeviation();
    static void onMinimumDeviationChanged();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter MeshDeviation
    static const double & getMeshDeviation();
    static const double & defaultMeshDeviation();
    static void removeMeshDeviation();
    static void setMeshDeviation(const double &v);
    static const char *docMeshDeviation();
    static void onMeshDeviationChanged();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter MeshAngularDeflection
    static const double & getMeshAngularDeflection();
    static const double & defaultMeshAngularDeflection();
    static void removeMeshAngularDeflection();
    static void setMeshAngularDeflection(const double &v);
    static const char *docMeshAngularDeflection();
    static void onMeshAngularDeflectionChanged();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter MinimumAngularDeflection
    static const double & getMinimumAngularDeflection();
    static const double & defaultMinimumAngularDeflection();
    static void removeMinimumAngularDeflection();
    static void setMinimumAngularDeflection(const double &v);
    static const char *docMinimumAngularDeflection();
    static void onMinimumAngularDeflectionChanged();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter OverrideTessellation
    static const bool & getOverrideTessellation();
    static const bool & defaultOverrideTessellation();
    static void removeOverrideTessellation();
    static void setOverrideTessellation(const bool &v);
    static const char *docOverrideTessellation();
    static void onOverrideTessellationChanged();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter MapFaceColor
    static const bool & getMapFaceColor();
    static const bool & defaultMapFaceColor();
    static void removeMapFaceColor();
    static void setMapFaceColor(const bool &v);
    static const char *docMapFaceColor();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter MapLineColor
    static const bool & getMapLineColor();
    static const bool & defaultMapLineColor();
    static void removeMapLineColor();
    static void setMapLineColor(const bool &v);
    static const char *docMapLineColor();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter MapPointColor
    static const bool & getMapPointColor();
    static const bool & defaultMapPointColor();
    static void removeMapPointColor();
    static void setMapPointColor(const bool &v);
    static const char *docMapPointColor();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter MapTransparency
    static const bool & getMapTransparency();
    static const bool & defaultMapTransparency();
    static void removeMapTransparency();
    static void setMapTransparency(const bool &v);
    static const char *docMapTransparency();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter AutoGridScale
    static const bool & getAutoGridScale();
    static const bool & defaultAutoGridScale();
    static void removeAutoGridScale();
    static void setAutoGridScale(const bool &v);
    static const char *docAutoGridScale();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter PreviewAddColor
    static const unsigned long & getPreviewAddColor();
    static const unsigned long & defaultPreviewAddColor();
    static void removePreviewAddColor();
    static void setPreviewAddColor(const unsigned long &v);
    static const char *docPreviewAddColor();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter PreviewSubColor
    static const unsigned long & getPreviewSubColor();
    static const unsigned long & defaultPreviewSubColor();
    static void removePreviewSubColor();
    static void setPreviewSubColor(const unsigned long &v);
    static const char *docPreviewSubColor();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter PreviewDressColor
    static const unsigned long & getPreviewDressColor();
    static const unsigned long & defaultPreviewDressColor();
    static void removePreviewDressColor();
    static void setPreviewDressColor(const unsigned long &v);
    static const char *docPreviewDressColor();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter PreviewIntersectColor
    static const unsigned long & getPreviewIntersectColor();
    static const unsigned long & defaultPreviewIntersectColor();
    static void removePreviewIntersectColor();
    static void setPreviewIntersectColor(const unsigned long &v);
    static const char *docPreviewIntersectColor();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter PreviewOnEdit
    static const bool & getPreviewOnEdit();
    static const bool & defaultPreviewOnEdit();
    static void removePreviewOnEdit();
    static void setPreviewOnEdit(const bool &v);
    static const char *docPreviewOnEdit();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter PreviewWithTransparency
    static const bool & getPreviewWithTransparency();
    static const bool & defaultPreviewWithTransparency();
    static void removePreviewWithTransparency();
    static void setPreviewWithTransparency(const bool &v);
    static const char *docPreviewWithTransparency();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter EditOnTop
    static const bool & getEditOnTop();
    static const bool & defaultEditOnTop();
    static void removeEditOnTop();
    static void setEditOnTop(const bool &v);
    static const char *docEditOnTop();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter EditRecomputeWait
    static const long & getEditRecomputeWait();
    static const long & defaultEditRecomputeWait();
    static void removeEditRecomputeWait();
    static void setEditRecomputeWait(const long &v);
    static const char *docEditRecomputeWait();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter AdjustCameraForNewFeature
    static const bool & getAdjustCameraForNewFeature();
    static const bool & defaultAdjustCameraForNewFeature();
    static void removeAdjustCameraForNewFeature();
    static void setAdjustCameraForNewFeature(const bool &v);
    static const char *docAdjustCameraForNewFeature();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter DefaultDatumColor
    static const unsigned long & getDefaultDatumColor();
    static const unsigned long & defaultDefaultDatumColor();
    static void removeDefaultDatumColor();
    static void setDefaultDatumColor(const unsigned long &v);
    static const char *docDefaultDatumColor();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter RespectSystemDPI
    static const bool & getRespectSystemDPI();
    static const bool & defaultRespectSystemDPI();
    static void removeRespectSystemDPI();
    static void setRespectSystemDPI(const bool &v);
    static const char *docRespectSystemDPI();
    static void onRespectSystemDPIChanged();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter SelectionPickThreshold
    static const long & getSelectionPickThreshold();
    static const long & defaultSelectionPickThreshold();
    static void removeSelectionPickThreshold();
    static void setSelectionPickThreshold(const long &v);
    static const char *docSelectionPickThreshold();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter SelectionPickThreshold2
    static const long & getSelectionPickThreshold2();
    static const long & defaultSelectionPickThreshold2();
    static void removeSelectionPickThreshold2();
    static void setSelectionPickThreshold2(const long &v);
    static const char *docSelectionPickThreshold2();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter SelectionPickRTree
    static const bool & getSelectionPickRTree();
    static const bool & defaultSelectionPickRTree();
    static void removeSelectionPickRTree();
    static void setSelectionPickRTree(const bool &v);
    static const char *docSelectionPickRTree();
    //@}

// Auto generated code (Tools/params_utils.py:150)
}; // class PartParams
} // namespace PartGui
//[[[end]]]
#endif // PART_PARAMS_H
