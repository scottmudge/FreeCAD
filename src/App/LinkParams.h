/****************************************************************************
 *   Copyright (c) 2022 Zheng Lei (realthunder) <realthunder.dev@gmail.com> *
 *                                                                          *
 *   This file is part of the FreeCAD CAx development system.               *
 *                                                                          *
 *   This library is free software; you can redistribute it and/or          *
 *   modify it under the terms of the GNU Library General Public            *
 *   License as published by the Free Software Foundation; either           *
 *   version 2 of the License, or (at your option) any later version.       *
 *                                                                          *
 *   This library  is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
 *   GNU Library General Public License for more details.                   *
 *                                                                          *
 *   You should have received a copy of the GNU Library General Public      *
 *   License along with this library; see the file COPYING.LIB. If not,     *
 *   write to the Free Software Foundation, Inc., 59 Temple Place,          *
 *   Suite 330, Boston, MA  02111-1307, USA                                 *
 *                                                                          *
 ****************************************************************************/

#ifndef APP_LINK_PARAMS_H
#define APP_LINK_PARAMS_H

/*[[[cog
import LinkParams
LinkParams.declare()
]]]*/

// Auto generated code (Tools/params_utils.py:72)
#include <Base/Parameter.h>


// Auto generated code (Tools/params_utils.py:78)
namespace App {
/** Convenient class to obtain App::Link related parameters

 * The parameters are under group "User parameter:BaseApp/Preferences/Link"
 *
 * This class is auto generated by App/LinkParams.py. Modify that file
 * instead of this one, if you want to add any parameter. You need
 * to install Cog Python package for code generation:
 * @code
 *     pip install cogapp
 * @endcode
 *
 * Once modified, you can regenerate the header and the source file,
 * @code
 *     python3 -m cogapp -r App/LinkParams.h App/LinkParams.cpp
 * @endcode
 *
 * You can add a new parameter by adding lines in App/LinkParams.py. Available
 * parameter types are 'Int, UInt, String, Bool, Float'. For example, to add
 * a new Int type parameter,
 * @code
 *     ParamInt(parameter_name, default_value, documentation, on_change=False)
 * @endcode
 *
 * If there is special handling on parameter change, pass in on_change=True.
 * And you need to provide a function implementation in App/LinkParams.cpp with
 * the following signature.
 * @code
 *     void LinkParams:on<parameter_name>Changed()
 * @endcode
 */
class AppExport LinkParams {
public:
    static ParameterGrp::handle getHandle();

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter HideScaleVector
    static const bool & getHideScaleVector();
    static const bool & defaultHideScaleVector();
    static void removeHideScaleVector();
    static void setHideScaleVector(const bool &v);
    static const char *docHideScaleVector();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter CreateInPlace
    static const bool & getCreateInPlace();
    static const bool & defaultCreateInPlace();
    static void removeCreateInPlace();
    static void setCreateInPlace(const bool &v);
    static const char *docCreateInPlace();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter CreateInContainer
    static const bool & getCreateInContainer();
    static const bool & defaultCreateInContainer();
    static void removeCreateInContainer();
    static void setCreateInContainer(const bool &v);
    static const char *docCreateInContainer();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter ActiveContainerKey
    static const std::string & getActiveContainerKey();
    static const std::string & defaultActiveContainerKey();
    static void removeActiveContainerKey();
    static void setActiveContainerKey(const std::string &v);
    static const char *docActiveContainerKey();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter CopyOnChangeApplyToAll
    static const bool & getCopyOnChangeApplyToAll();
    static const bool & defaultCopyOnChangeApplyToAll();
    static void removeCopyOnChangeApplyToAll();
    static void setCopyOnChangeApplyToAll(const bool &v);
    static const char *docCopyOnChangeApplyToAll();
    //@}

    // Auto generated code (Tools/params_utils.py:122)
    //@{
    /// Accessor for parameter ShowElement
    ///
    /// Default value of the "ShowElement" property in an App::Link object,
    /// which specifies whether to show the link array element as individual
    /// object in the tree view.
    static const bool & getShowElement();
    static const bool & defaultShowElement();
    static void removeShowElement();
    static void setShowElement(const bool &v);
    static const char *docShowElement();
    //@}

// Auto generated code (Tools/params_utils.py:150)
}; // class LinkParams
} // namespace App
//[[[end]]]

#endif // APP_LINK_PARAMS_H
